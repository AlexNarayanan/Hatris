#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 9474 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 492
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e Hatris) (read-case-sensitive #t"
 #") (teachpacks ((lib \"image.rkt\" \"teachpack\" \"2htdp\") (lib \"un"
 #"iverse.rkt\" \"teachpack\" \"2htdp\") (lib \"batch-io.rkt\" \"teachp"
 #"ack\" \"2htdp\") (lib \"dir.rkt\" \"teachpack\" \"htdp\"))) (htdp-se"
 #"ttings #(#t constructor repeating-decimal #f #t none #f ((lib \"imag"
 #"e.rkt\" \"teachpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\""
 #" \"2htdp\") (lib \"batch-io.rkt\" \"teachpack\" \"2htdp\") (lib \"di"
 #"r.rkt\" \"teachpack\" \"htdp\")))))"
) 0 0 4 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;     ;;  ;;   ;;;   ;;;;;; ;;;;;; ;;;;;; ;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;     ;;  ;;  ;; ;;    ;;   ;;  ;;   ;;   ;;"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;     ;;;;;; ;;;;;;;   ;;   ;;;;;;   ;;   ;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;     ;;  ;; ;;   ;;   ;;   ;; ;;    ;;       ;;"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;     ;;  ;; ;;   ;;   ;;   ;;  ;; ;;;;;; ;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";;=================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; A game about stacking hats"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";; Numerical Constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"SEGS"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 17 3 62
#"; segments, horizontal pieces that the scene is broken up into"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 17 3 29 #"; size of a segment in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"SEGS"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"SEGS"
0 0 24 3 1 #" "
0 0 21 3 2 #".8"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 17 3 57 #"; tile that describes location in reference to the canvas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"easy/med-speed"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"hard-speed"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; Graphical Constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"HEAD"
0 0 24 3 1 #" "
0 2          19 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0002\0\0\0002\b"
 #"\6\0\0\0\36?\210\261\0\0\6\371IDATh\201\335\232\335O\23\335\26"
 #"\306\177C)\324\26hAP\4D\261 \5\255A\242F\2!\250\341B\361\346"
 #"\275:D\2751\250\211'&\200\377\0^\250\257W\0021\02151\347F\b\361"
 #"\302\230`\340\304\234\b\211\30\342'\212\324V\202\244*(\225TQh\371j;"
 #"\357\205\351\204Bi\2470=\357\311y\222If\366^{\255\365\314^{\317\336"
 #"k\217Pok\22\371?@\314\337\355\200R\210\215\266\201FS]\320\362z["
 #"\223\242v\24'\262\324q\267\333\315\272"
 #"u\353\2\312&&&\330\260a\203\364\254\4)E\210,v~``\200\202\202"
 #"\2bcWV\235\226\226\206(\376\36\232\223\223\223$''Ku\253%\265\346"
 #"1\322h\252\243\267\267\27Q\24\21E"
 #"\21\263\331\34\222\304R\30\f\6\251\255\315f[1\24\303aM=\322h\252\243"
 #"\257\257\217}\373\366\255E\215\204\355\333"
 #"\267\257\272\355\252\2114\232\352\30\e\e"
 #"#==\235\230\30e&?A\20\230\237\237'..N*\223\ej\253\362\240"
 #"\321T\207\323\351$##C1\22~\250\325j)\324\6\a\ae\207ZD="
 #"\342W\372\343\307\17\f\6C\344^F\210\35;v\360\366\355[\314&s\330\236"
 #"\tK\344\321?\376\305\2337o\0\230"
 #"\236\236F\247\323)\343\245L\354\334\271"
 #"S\226\\H\"\215\246:FFF\310\311\311Q\304\251h\"l\217l\332\264)"
 #"\352Nx\275^<\36\217\364\254V\253#\36{+J7\232\352\260Z\255\0013"
 #"\310b\210\242\210\307\343\tp`\265x\376\3749\32\215F\272\36?~\34P\357"
 #"t:\303\16\372\220\264\215Fc\300\233\21E"
 #"\21A\20\20\4\201\230\230\30\324j5j\265"
) 500
(
 #"\32A\20\370\366\355[\304\4\306\307\307"
 #"\21\4\201\222\222\222\200\362\212\212\n\4"
 #"A`ll\f\200\224\224\224\260\272B"
 #"\22\361\371|\322\275\307\343\341\325\253W"
 #"\354\336\275;\250\354\306\215\e\21\4\201"
 #"/_\276\2045\352G\270\260\315\312\312"
 #"\222\255K\366\364\353v\273\331\263gO"
 #"X\271\314\314Li\35\365\337\204\254\021555\205^\257\217\266/k\202,\""
 #"n\267\e\243\321\30m_\326\204\277u"
 #"\207\370\356\335;\305t\311\"\222\220\220"
 #"\300\207\17\37d)\354\353\353\223m\274"
 #"\240\240\200\241\241\241\25\353\237<y\""
 #"[\227,\":\235\216_\277~\311R"
 #"\270\177\377~\331\306\1\362\362\362V\254+--e~~^\226\236\220D\26+"
 #"\361z\275\224\226\226\206T611!\313\350R\270\\\256\240\345[\267n%>"
 #">\36\257\327\eV\307\212D\352mM$%%1;;\v@bb\"--"
 #"-+****\"555\254\301`\320j\265\210\242\310\314\314\f.\227\v"
 #"Q\24\271r\345\nv\273\35`\331\227>\30\302\206\226\377m\250T*\314f3"
 #"V\2535\250\\\177\177\177\4\256\a\207F\243A\253\325\2p\374\370q\0jk"
 #"k9p\340@\330e|\304\263\226\311d\2226>>\237O\272\224\206\377\253\36"
 #"s6G\326.1,\21A\20B\326\371\257P\370\370\361c\300d\341p8p"
 #"8\34a\235\3\370\367\0377e\311\205$RokB\247\323\341v\273e)["
 #"\tN\247\223\226\226\26^\276|\t\374"
 #"^)\310\231\5\27\26\26V\f\345\245"
 #"\220\265\326Z\353R\275\270\270\30\267\333--srss\3\352\207\207\207io"
 #"oG\20\4\252\253\253\245UD$i"
 #"\245\260\222\365\266&\364z}\320\214\241\37\217\36=b``\0\237\317"
 #"\207V\253\345\304\211\23$$$\4\310\224\225\225-kg\261Xx\370\360"
) 500
(
 #"!\26\213\205\333\267o\3\360\351\323'"
 #"\316\237?O~~\276l\22\262\210\370"
 #"\311h\265Z\246\246\246\2269\330\335\335"
 #"\315\305\213\27\351\356\356\346\320\241C\224"
 #"\224\224p\347\316\35RSS\211\215\215"
 #"\245\250\250\b\203\301\200\305b\301\341p\340r\271P\251Th4\32zzz\350"
 #"\355\355\r\370(\336\272u\213\303\207\17"
 #"\223\237\237\317\314\314\214\262D\374d\22"
 #"\23\23\361z\275\1\233\255\273w\357\322"
 #"\335\335-\221z\372\364)\323\323\323t"
 #"vv\262y\363f\256^\275\212\315f"
 #"\343\364\351\323\24\26\26\322\334\334LZ"
 #"Z\32\307\216\35cxx\230\376\376\376ec\320\257_\253\325\362\317g\177*K"
 #"\304\17\273\335\316\266m\333\244\347\305\341"
 #"\346\363\371\230\236\236\6\340\302\205\v\350"
 #"\365zjkk9s\346\f\255\255\255\\\277~\235\236\236\36rrr\270|\371"
 #"\262\324\356\375\373\367\0016T*\225t"
 #"\37\237\24<\234\227B\210\364\240\307\277"
 #"w\376\376\375;\311\311\311\214\216\216\322"
 #"\321\321\301\340\340 /^\274\340\331\263"
 #"g\221\250\243\252\252\n\273\335\216\311d"
 #"\342\336\275{\264\265\265QUU\205\303\341 //Ov\2461\342\36\361+N"
 #"IIA\24E\262\262\2628{\366,\0\35\35\35\264\265\265\321\336\336\36VO"
 #"MM\rEEE\270\\.\342\342\342(//gvv\226\352\352jFFF"
 #"\"\"\261*\"\213\341r\271\2\22v"
 #"G\217\36\245\242\242\202\364\364t\354v"
 #";\367\357\337\17\332\356\346\315\233\24\27"
 #"\27\323\331\331ICC\3\231\231\231\250\325jv\355\332%}\\#=^\2108"
 #"\264\26\303\37f?\177\376$))I"
 #"*\367z\275\314\317\317\323\320\320\200\325"
 #"j\245\246\246\206\266\2666\366\356\335K"
 #"ee%\255\255\255<x\360\0\243\321\210\327\353\245\262\262"
 #"\222S\247N\241\327\353W}>\262&\"K\t-M:,"
) 342
(
 #",,\340\363\371\30\34\34d||\234\230\230\30T*\25\36\217\207-[\266\220"
 #"\233\233\213 \b\f\r\ra6\207\317"
 #"\357\206\202\"D \360\324*\222,\212"
 #"\325j\245\260\260p\315\307o\212\355\331"
 #"\353mM\2223\376\205\244\323\351\\Q"
 #"\376\365\353\327\b\202\240\b\tP\260G"
 #"\226\342\303\177\336\262\367\307V\322\323\323"
 #")//\178\374\264X,\224\225\225)z\262\2538\221FS\35\243\243\243\314"
 #"\315\315q\356\3349\272\272\2720\32\215"
 #"\350\365zt:\35\32\215\206\321\321Q"
 #"\276~\375\312\344\344$\360?t\252\273"
 #"\24\231\231\231\0\334\270q\203\332\332Z"
 #"\272\272\272\370\374\3713\327\256]\343\340"
 #"\301\203R\350\31\f\6\326\257_\257\210"
 #"\315\250\20\231\230\230 --\215\354\354"
 #"l\232\233\233\271t\351\22\360{\327\267"
 #"x\232V\22Q!\262x\377\222\235\235\35\r\23\313\240x\246\261\336\326DFF"
 #"\206\354|\224R\210J\312\264\336\326D||<sss!\345\374\203]\tD"
 #"-\367[okB\243\321 \b\2###\313\352\5A\340\344\311\223\212M\301"
 #"Q\375;\310\357d\260L\376\221#G"
 #"\310\271R\241\230\255\250\377\346\4\312\377\322\24\f\177\1\333"
 #"j\243U\255\216\260]\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT0"
0 0 24 3 1 #" "
0 12           4 4 1033
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 36 0) #(struct:po"
 #"int 36 40) #(struct:point 0 40)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 15 2 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:point 0 0) #(struct:point 2 0) #(struct:point 2 36) #(str"
 #"uct:point 0 36)) 255 \"white\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 36 0) #(struct:point 36 40) #"
 #"(struct:point 0 40)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 25/2 2 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 1 0) #(struct:point 1 36) #(struct:point "
 #"0 36)) 255 \"white\"))) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 38 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:point 0 0) #(struct:point 36 0) #(struct:point 36 2) #(struct:poin"
 #"t 0 2)) 255 \"black\"))) #(struct:translate 7 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 22 0) #(stru"
 #"ct:point 22 40) #(struct:point 0 40)) 255 \"black\")))))))))))) #(st"
 #"ruct:bb 36 40 40) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT1"
0 0 24 3 1 #" "
0 12           4 4 40909
(
 #"(#(struct:overlay #(struct:translate 3 20 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 1 1 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:tran"
 #"slate 2 0 #(struct:overlay #(struct:translate 1 0 #(struct:overlay #"
 #"(struct:translate 2 0 #(struct:overlay #(struct:translate 3 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poin"
 #"t 10 0) #(struct:point 10 1) #(struct:point 0 1)) 255 #(struct:color"
 #" 10 93 1 255)))) #(struct:translate 0 1 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 16 0) #(struct:point"
 #" 16 1) #(struct:point 0 1)) 255 #(struct:color 10 93 1 255)))))) #(s"
 #"truct:translate 0 2 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:point 0 0) #(struct:point 20 0) #(struct:point 20 1) #(struct:poin"
 #"t 0 1)) 255 #(struct:color 10 93 1 255)))))) #(struct:translate 0 3 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struc"
 #"t:point 22 0) #(struct:point 22 2) #(struct:point 0 2)) 255 #(struct"
 #":color 10 93 1 255)))))) #(struct:translate 0 5 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 26 0) #(stru"
 #"ct:point 26 2) #(struct:point 0 2)) 255 #(struct:color 10 93 1 255))"
 #")))) #(struct:translate 0 7 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:point 0 0) #(struct:point 28 0) #(struct:point 28 3) #(str"
 #"uct:point 0 3)) 255 #(struct:color 10 93 1 255)))))) #(struct:transl"
 #"ate 1 10 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 26 0) #(struct:point 26 2) #(struct:point 0 2)) 255"
 #" #(struct:color 10 93 1 255)))))) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:t"
 #"ranslate 2 0 #(struct:overlay #(struct:translate 1 0 #(struct:overla"
 #"y #(struct:translate 2 0 #(struct:overlay #(struct:translate 3 0 #(s"
 #"truct:overlay #(struct:translate 1 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 10 0) #(struct:point 10"
 #" 1) #(struct:point 0 1)) 255 \"black\"))) #(struct:translate 0 1 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:p"
 #"oint 12 0) #(struct:point 12 1) #(struct:point 0 1)) 255 \"black\"))"
 #"))) #(struct:translate 0 2 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:point 0 0) #(struct:point 18 0) #(struct:point 18 1) #(stru"
 #"ct:point 0 1)) 255 \"black\"))))) #(struct:translate 0 3 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 22 "
 #"0) #(struct:point 22 1) #(struct:point 0 1)) 255 \"black\"))))) #(st"
 #"ruct:translate 0 4 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 24 0) #(struct:point 24 2) #(struct:point"
 #" 0 2)) 255 \"black\"))))) #(struct:translate 0 6 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 28 0) #(str"
 #"uct:point 28 2) #(struct:point 0 2)) 255 \"black\"))))) #(struct:tra"
 #"nslate 0 8 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0"
 #" 0) #(struct:point 30 0) #(struct:point 30 3) #(struct:point 0 3)) 2"
 #"55 \"black\"))))) #(struct:translate 1 11 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 28 0) #(struct:poi"
 #"nt 28 2) #(struct:point 0 2)) 255 \"black\"))))) #(struct:translate "
 #"2 13 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #("
 #"struct:point 26 0) #(struct:point 26 1) #(struct:point 0 1)) 255 \"b"
 #"lack\"))))))) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 1 1 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 1 0 #(struct:overlay #(struct:translate 2 0 #(struc"
 #"t:overlay #(struct:translate 1 0 #(struct:overlay #(struct:translate"
 #" 2 0 #(struct:overlay #(struct:translate 3 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 10 0) #(struct:"
 #"point 10 1) #(struct:point 0 1)) 255 #(struct:color 10 93 1 255)))) "
 #"#(struct:translate 0 1 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:point 0 0) #(struct:point 16 0) #(struct:point 16 1) #(struct:p"
 #"oint 0 1)) 255 #(struct:color 10 93 1 255)))))) #(struct:translate 0"
 #" 2 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 20 0) #(struct:point 20 1) #(struct:point 0 1)) 255 #(str"
 #"uct:color 10 93 1 255)))))) #(struct:translate 0 3 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 22 0) #(s"
 #"truct:point 22 2) #(struct:point 0 2)) 255 #(struct:color 10 93 1 25"
 #"5)))))) #(struct:translate 0 5 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:point 0 0) #(struct:point 26 0) #(struct:point 26 2) #("
 #"struct:point 0 2)) 255 #(struct:color 10 93 1 255)))))) #(struct:tra"
 #"nslate 0 7 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0"
 #" 0) #(struct:point 28 0) #(struct:point 28 3) #(struct:point 0 3)) 2"
 #"55 #(struct:color 10 93 1 255)))))) #(struct:translate 1 10 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point "
 #"26 0) #(struct:point 26 2) #(struct:point 0 2)) 255 #(struct:color 1"
 #"0 93 1 255)))))) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 1 0 #(struct:overlay #(struct:translate 2 0 #(st"
 #"ruct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:transl"
 #"ate 2 0 #(struct:overlay #(struct:translate 3 0 #(struct:overlay #(s"
 #"truct:translate 1 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:point 0 0) #(struct:point 10 0) #(struct:point 10 1) #(struct:poin"
 #"t 0 1)) 255 \"black\"))) #(struct:translate 0 1 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 12 0) #(stru"
 #"ct:point 12 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:tran"
 #"slate 0 2 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 "
 #"0) #(struct:point 18 0) #(struct:point 18 1) #(struct:point 0 1)) 25"
 #"5 \"black\"))))) #(struct:translate 0 3 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 22 0) #(struct:point"
 #" 22 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:translate 0 "
 #"4 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 24 0) #(struct:point 24 2) #(struct:point 0 2)) 255 \"blac"
 #"k\"))))) #(struct:translate 0 6 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:point 0 0) #(struct:point 28 0) #(struct:point 28 2) #"
 #"(struct:point 0 2)) 255 \"black\"))))) #(struct:translate 0 8 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poin"
 #"t 30 0) #(struct:point 30 3) #(struct:point 0 3)) 255 \"black\")))))"
 #" #(struct:translate 1 11 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:point 0 0) #(struct:point 28 0) #(struct:point 28 2) #(struct"
 #":point 0 2)) 255 \"black\"))))) #(struct:translate 2 13 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 26 0"
 #") #(struct:point 26 1) #(struct:point 0 1)) 255 \"black\"))))))))) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 1 1 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 1 0 #(struct:overlay #(struct:translate 2 0 #(struct:overlay #(str"
 #"uct:translate 1 0 #(struct:overlay #(struct:translate 2 0 #(struct:o"
 #"verlay #(struct:translate 3 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:point 0 0) #(struct:point 10 0) #(struct:point 10 1) #(s"
 #"truct:point 0 1)) 255 #(struct:color 10 93 1 255)))) #(struct:transl"
 #"ate 0 1 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0)"
 #" #(struct:point 16 0) #(struct:point 16 1) #(struct:point 0 1)) 255 "
 #"#(struct:color 10 93 1 255)))))) #(struct:translate 0 2 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 20 0"
 #") #(struct:point 20 1) #(struct:point 0 1)) 255 #(struct:color 10 93"
 #" 1 255)))))) #(struct:translate 0 3 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 22 0) #(struct:point 22 "
 #"2) #(struct:point 0 2)) 255 #(struct:color 10 93 1 255)))))) #(struc"
 #"t:translate 0 5 #(struct:translate 0 0 #(struct:polygon (#(struct:po"
 #"int 0 0) #(struct:point 26 0) #(struct:point 26 2) #(struct:point 0 "
 #"2)) 255 #(struct:color 10 93 1 255)))))) #(struct:translate 0 7 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:po"
 #"int 28 0) #(struct:point 28 3) #(struct:point 0 3)) 255 #(struct:col"
 #"or 10 93 1 255)))))) #(struct:translate 1 10 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 26 0) #(struct:"
 #"point 26 2) #(struct:point 0 2)) 255 #(struct:color 10 93 1 255)))))"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 1 0 #(struct:overlay #(struct:translate 2 0 #(struct:overlay #("
 #"struct:translate 1 0 #(struct:overlay #(struct:translate 2 0 #(struc"
 #"t:overlay #(struct:translate 3 0 #(struct:overlay #(struct:translate"
 #" 1 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #("
 #"struct:point 10 0) #(struct:point 10 1) #(struct:point 0 1)) 255 \"b"
 #"lack\"))) #(struct:translate 0 1 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 12 0) #(struct:point 12 1) "
 #"#(struct:point 0 1)) 255 \"black\"))))) #(struct:translate 0 2 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 18 0) #(struct:point 18 1) #(struct:point 0 1)) 255 \"black\"))))"
 #") #(struct:translate 0 3 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:point 0 0) #(struct:point 22 0) #(struct:point 22 1) #(struct"
 #":point 0 1)) 255 \"black\"))))) #(struct:translate 0 4 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 24 0)"
 #" #(struct:point 24 2) #(struct:point 0 2)) 255 \"black\"))))) #(stru"
 #"ct:translate 0 6 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"oint 0 0) #(struct:point 28 0) #(struct:point 28 2) #(struct:point 0"
 #" 2)) 255 \"black\"))))) #(struct:translate 0 8 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30 0) #(struc"
 #"t:point 30 3) #(struct:point 0 3)) 255 \"black\"))))) #(struct:trans"
 #"late 1 11 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 "
 #"0) #(struct:point 28 0) #(struct:point 28 2) #(struct:point 0 2)) 25"
 #"5 \"black\"))))) #(struct:translate 2 13 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 26 0) #(struct:poin"
 #"t 26 1) #(struct:point 0 1)) 255 \"black\"))))))))) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 36 0) #(struct:point 36 34) #(struct:point 0 34)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 10 5 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 14 0) #(struct:point 14 14)"
 #" #(struct:point 0 14)) #(struct:translate 0 -0.5 #(struct:overlay #("
 #"struct:translate 4.0 0 #(struct:t"
 #"ranslate 3.0 6.5 #(struct:text \"L\" 0 1 #(struct:color 50 133 29 25"
 #"5) 11 \"Gill Sans\" swiss normal bold #f))) #(struct:translate 0 0.5"
 #" #(struct:translate 7 7 #(struct:ellipse 14 14 0 255 \"white\"))))))"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 1 1 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 1 0 #(struct:overlay #(struct:translate 1 0 #(struc"
 #"t:overlay #(struct:translate 1 0 #(struct:overlay #(struct:translate"
 #" 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:overlay #(stru"
 #"ct:translate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:ov"
 #"erlay #(struct:translate 3 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:point 0 0) #(struct:point 6 0) #(struct:point 6 1) #(stru"
 #"ct:point 0 1)) 255 #(struct:color 50 133 29 255)))) #(struct:transla"
 #"te 0 1 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 12 0) #(struct:point 12 1) #(struct:point 0 1)) 255 #"
 #"(struct:color 50 133 29 255)))))) #(struct:translate 0 2 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 16 "
 #"0) #(struct:point 16 2) #(struct:point 0 2)) 255 #(struct:color 50 1"
 #"33 29 255)))))) #(struct:translate 0 4 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:point 0 0) #(struct:point 20 0) #(struct:point "
 #"20 2) #(struct:point 0 2)) 255 #(struct:color 50 133 29 255)))))) #("
 #"struct:translate 0 6 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 24 0) #(struct:point 24 3) #(struct:poi"
 #"nt 0 3)) 255 #(struct:color 50 133 29 255)))))) #(struct:translate 0"
 #" 9 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 28 0) #(struct:point 28 3) #(struct:point 0 3)) 255 #(str"
 #"uct:color 50 133 29 255)))))) #(struct:translate 0 12 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30 0) "
 #"#(struct:point 30 4) #(struct:point 0 4)) 255 #(struct:color 50 133 "
 #"29 255)))))) #(struct:translate 0 16 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 32 0) #(struct:point 32"
 #" 4) #(struct:point 0 4)) 255 #(struct:color 50 133 29 255)))))) #(st"
 #"ruct:translate 0 20 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:point 0 0) #(struct:point 34 0) #(struct:point 34 5) #(struct:poin"
 #"t 0 5)) 255 #(struct:color 50 133 29 255)))))) #(struct:translate 1 "
 #"25 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 32 0) #(struct:point 32 4) #(struct:point 0 4)) 255 #(str"
 #"uct:color 50 133 29 255)))))) #(struct:translate 2 29 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30 0) "
 #"#(struct:point 30 2) #(struct:point 0 2)) 255 #(struct:color 50 133 "
 #"29 255)))))) #(struct:translate 3 31 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 28 0) #(struct:point 28"
 #" 1) #(struct:point 0 1)) 255 #(struct:color 50 133 29 255)))))) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:over"
 #"lay #(struct:translate 1 0 #(struct:overlay #(struct:translate 2 0 #"
 #"(struct:overlay #(struct:translate 2 0 #(struct:overlay #(struct:tra"
 #"nslate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:overlay "
 #"#(struct:translate 3 0 #(struct:overlay #(struct:translate 1 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 6 0) #(struct:point 6 1) #(struct:point 0 1)) 255 \"black\"))) #("
 #"struct:translate 0 1 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 8 0) #(struct:point 8 1) #(struct:point"
 #" 0 1)) 255 \"black\"))))) #(struct:translate 0 2 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 14 0) #(str"
 #"uct:point 14 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:tra"
 #"nslate 0 3 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0"
 #" 0) #(struct:point 18 0) #(struct:point 18 2) #(struct:point 0 2)) 2"
 #"55 \"black\"))))) #(struct:translate 0 5 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 22 0) #(struct:poin"
 #"t 22 2) #(struct:point 0 2)) 255 \"black\"))))) #(struct:translate 0"
 #" 7 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 26 0) #(struct:point 26 3) #(struct:point 0 3)) 255 \"bla"
 #"ck\"))))) #(struct:translate 0 10 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 3)"
 #" #(struct:point 0 3)) 255 \"black\"))))) #(struct:translate 0 13 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:p"
 #"oint 32 0) #(struct:point 32 4) #(struct:point 0 4)) 255 \"black\"))"
 #"))) #(struct:translate 0 17 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:point 0 0) #(struct:point 34 0) #(struct:point 34 4) #(str"
 #"uct:point 0 4)) 255 \"black\"))))) #(struct:translate 0 21 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 3"
 #"6 0) #(struct:point 36 5) #(struct:point 0 5)) 255 \"black\"))))) #("
 #"struct:translate 1 26 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:point 0 0) #(struct:point 34 0) #(struct:point 34 4) #(struct:po"
 #"int 0 4)) 255 \"black\"))))) #(struct:translate 2 30 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 32 0) #"
 #"(struct:point 32 2) #(struct:point 0 2)) 255 \"black\"))))) #(struct"
 #":translate 3 32 #(struct:translate 0 0 #(struct:polygon (#(struct:po"
 #"int 0 0) #(struct:point 30 0) #(struct:point 30 1) #(struct:point 0 "
 #"1)) 255 \"black\"))))) #(struct:translate 4 33 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:point 0 0) #(struct:point 28 0) #(struc"
 #"t:point 28 1) #(struct:point 0 1)) 255 \"black\"))))))))))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 36 "
 #"0) #(struct:point 36 34) #(struct:point 0 34)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 10 5 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 14 0) #(struct:point 14 14) #(struct:point "
 #"0 14)) #(struct:translate 0 -0.5 #(struct:overlay #(struct:translate"
 #" 4.0 0 #(struct:translate 3.0 6.5 #(struct:text \"L\" 0 1 #(struct:c"
 #"olor 50 133 29 255) 11 \"Gill Sans\" swiss normal bold #f))) #(struc"
 #"t:translate 0 0.5 #(struct:translate 7 7 #(struct:ellipse 14 14 0 25"
 #"5 \"white\"))))))) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 1 1 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:tran"
 #"slate 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:overlay #"
 #"(struct:translate 2 0 #(struct:overlay #(struct:translate 2 0 #(stru"
 #"ct:overlay #(struct:translate 2 0 #(struct:overlay #(struct:translat"
 #"e 2 0 #(struct:overlay #(struct:translate 3 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:point 0 0) #(struct:point 6 0) #(struct:"
 #"point 6 1) #(struct:point 0 1)) 255 #(struct:color 50 133 29 255))))"
 #" #(struct:translate 0 1 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 12 0) #(struct:point 12 1) #(struct:"
 #"point 0 1)) 255 #(struct:color 50 133 29 255)))))) #(struct:translat"
 #"e 0 2 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 16 0) #(struct:point 16 2) #(struct:point 0 2)) 255 #("
 #"struct:color 50 133 29 255)))))) #(struct:translate 0 4 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 20 0"
 #") #(struct:point 20 2) #(struct:point 0 2)) 255 #(struct:color 50 13"
 #"3 29 255)))))) #(struct:translate 0 6 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:point 0 0) #(struct:point 24 0) #(struct:point 2"
 #"4 3) #(struct:point 0 3)) 255 #(struct:color 50 133 29 255)))))) #(s"
 #"truct:translate 0 9 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:point 0 0) #(struct:point 28 0) #(struct:point 28 3) #(struct:poin"
 #"t 0 3)) 255 #(struct:color 50 133 29 255)))))) #(struct:translate 0 "
 #"12 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 30 0) #(struct:point 30 4) #(struct:point 0 4)) 255 #(str"
 #"uct:color 50 133 29 255)))))) #(struct:translate 0 16 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 32 0) "
 #"#(struct:point 32 4) #(struct:point 0 4)) 255 #(struct:color 50 133 "
 #"29 255)))))) #(struct:translate 0 20 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 34 0) #(struct:point 34"
 #" 5) #(struct:point 0 5)) 255 #(struct:color 50 133 29 255)))))) #(st"
 #"ruct:translate 1 25 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:point 0 0) #(struct:point 32 0) #(struct:point 32 4) #(struct:poin"
 #"t 0 4)) 255 #(struct:color 50 133 29 255)))))) #(struct:translate 2 "
 #"29 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 30 0) #(struct:point 30 2) #(struct:point 0 2)) 255 #(str"
 #"uct:color 50 133 29 255)))))) #(struct:translate 3 31 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 28 0) "
 #"#(struct:point 28 1) #(struct:point 0 1)) 255 #(struct:color 50 133 "
 #"29 255)))))) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 1 0 #(struct:overlay #(struct:translate "
 #"1 0 #(struct:overlay #(struct:translate 1 0 #(struct:overlay #(struc"
 #"t:translate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:ove"
 #"rlay #(struct:translate 2 0 #(struct:overlay #(struct:translate 2 0 "
 #"#(struct:overlay #(struct:translate 3 0 #(struct:overlay #(struct:tr"
 #"anslate 1 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 6 0) #(struct:point 6 1) #(struct:point 0 1)) 25"
 #"5 \"black\"))) #(struct:translate 0 1 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:point 0 0) #(struct:point 8 0) #(struct:point 8 "
 #"1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:translate 0 2 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:"
 #"point 14 0) #(struct:point 14 1) #(struct:point 0 1)) 255 \"black\")"
 #")))) #(struct:translate 0 3 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:point 0 0) #(struct:point 18 0) #(struct:point 18 2) #(str"
 #"uct:point 0 2)) 255 \"black\"))))) #(struct:translate 0 5 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 22"
 #" 0) #(struct:point 22 2) #(struct:point 0 2)) 255 \"black\"))))) #(s"
 #"truct:translate 0 7 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:point 0 0) #(struct:point 26 0) #(struct:point 26 3) #(struct:poin"
 #"t 0 3)) 255 \"black\"))))) #(struct:translate 0 10 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30 0) #(s"
 #"truct:point 30 3) #(struct:point 0 3)) 255 \"black\"))))) #(struct:t"
 #"ranslate 0 13 #(struct:translate 0 0 #(struct:polygon (#(struct:poin"
 #"t 0 0) #(struct:point 32 0) #(struct:point 32 4) #(struct:point 0 4)"
 #") 255 \"black\"))))) #(struct:translate 0 17 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 34 0) #(struct:"
 #"point 34 4) #(struct:point 0 4)) 255 \"black\"))))) #(struct:transla"
 #"te 0 21 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0)"
 #" #(struct:point 36 0) #(struct:point 36 5) #(struct:point 0 5)) 255 "
 #"\"black\"))))) #(struct:translate 1 26 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:point 0 0) #(struct:point 34 0) #(struct:point "
 #"34 4) #(struct:point 0 4)) 255 \"black\"))))) #(struct:translate 2 3"
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 32 0) #(struct:point 32 2) #(struct:point 0 2)) 255 \"blac"
 #"k\"))))) #(struct:translate 3 32 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 1) "
 #"#(struct:point 0 1)) 255 \"black\"))))) #(struct:translate 4 33 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:po"
 #"int 28 0) #(struct:point 28 1) #(struct:point 0 1)) 255 \"black\")))"
 #")))))))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 36 0) #(struct:point 36 34) #(struct:point 0 34)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 10 5 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 14 0) #(struct:point 14 "
 #"14) #(struct:point 0 14)) #(struct:translate 0 -0.5 #(struct:overlay"
 #" #(struct:translate 4.0 0 #(struct"
 #":translate 3.0 6.5 #(struct:text \"L\" 0 1 #(struct:color 50 133 29 "
 #"255) 11 \"Gill Sans\" swiss normal bold #f))) #(struct:translate 0 0"
 #".5 #(struct:translate 7 7 #(struct:ellipse 14 14 0 255 \"white\"))))"
 #"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 1 1 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 1 0 #(struct:overlay #(struct:translate 1 0 #(str"
 #"uct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:transla"
 #"te 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:overlay #(st"
 #"ruct:translate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:"
 #"overlay #(struct:translate 3 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:point 0 0) #(struct:point 6 0) #(struct:point 6 1) #(st"
 #"ruct:point 0 1)) 255 #(struct:color 50 133 29 255)))) #(struct:trans"
 #"late 0 1 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 12 0) #(struct:point 12 1) #(struct:point 0 1)) 255"
 #" #(struct:color 50 133 29 255)))))) #(struct:translate 0 2 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 1"
 #"6 0) #(struct:point 16 2) #(struct:point 0 2)) 255 #(struct:color 50"
 #" 133 29 255)))))) #(struct:translate 0 4 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 20 0) #(struct:poin"
 #"t 20 2) #(struct:point 0 2)) 255 #(struct:color 50 133 29 255)))))) "
 #"#(struct:translate 0 6 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:point 0 0) #(struct:point 24 0) #(struct:point 24 3) #(struct:p"
 #"oint 0 3)) 255 #(struct:color 50 133 29 255)))))) #(struct:translate"
 #" 0 9 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #("
 #"struct:point 28 0) #(struct:point 28 3) #(struct:point 0 3)) 255 #(s"
 #"truct:color 50 133 29 255)))))) #(struct:translate 0 12 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30 0"
 #") #(struct:point 30 4) #(struct:point 0 4)) 255 #(struct:color 50 13"
 #"3 29 255)))))) #(struct:translate 0 16 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:point 0 0) #(struct:point 32 0) #(struct:point "
 #"32 4) #(struct:point 0 4)) 255 #(struct:color 50 133 29 255)))))) #("
 #"struct:translate 0 20 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:point 0 0) #(struct:point 34 0) #(struct:point 34 5) #(struct:po"
 #"int 0 5)) 255 #(struct:color 50 133 29 255)))))) #(struct:translate "
 #"1 25 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #("
 #"struct:point 32 0) #(struct:point 32 4) #(struct:point 0 4)) 255 #(s"
 #"truct:color 50 133 29 255)))))) #(struct:translate 2 29 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30 0"
 #") #(struct:point 30 2) #(struct:point 0 2)) 255 #(struct:color 50 13"
 #"3 29 255)))))) #(struct:translate 3 31 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:point 0 0) #(struct:point 28 0) #(struct:point "
 #"28 1) #(struct:point 0 1)) 255 #(struct:color 50 133 29 255)))))) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:ov"
 #"erlay #(struct:translate 1 0 #(struct:overlay #(struct:translate 2 0"
 #" #(struct:overlay #(struct:translate 2 0 #(struct:overlay #(struct:t"
 #"ranslate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:overla"
 #"y #(struct:translate 3 0 #(struct:overlay #(struct:translate 1 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:p"
 #"oint 6 0) #(struct:point 6 1) #(struct:point 0 1)) 255 \"black\"))) "
 #"#(struct:translate 0 1 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:point 0 0) #(struct:point 8 0) #(struct:point 8 1) #(struct:poi"
 #"nt 0 1)) 255 \"black\"))))) #(struct:translate 0 2 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 14 0) #(s"
 #"truct:point 14 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:t"
 #"ranslate 0 3 #(struct:translate 0 0 #(struct:polygon (#(struct:point"
 #" 0 0) #(struct:point 18 0) #(struct:point 18 2) #(struct:point 0 2))"
 #" 255 \"black\"))))) #(struct:translate 0 5 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:point 0 0) #(struct:point 22 0) #(struct:po"
 #"int 22 2) #(struct:point 0 2)) 255 \"black\"))))) #(struct:translate"
 #" 0 7 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #("
 #"struct:point 26 0) #(struct:point 26 3) #(struct:point 0 3)) 255 \"b"
 #"lack\"))))) #(struct:translate 0 10 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 "
 #"3) #(struct:point 0 3)) 255 \"black\"))))) #(struct:translate 0 13 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct"
 #":point 32 0) #(struct:point 32 4) #(struct:point 0 4)) 255 \"black\""
 #"))))) #(struct:translate 0 17 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:point 0 0) #(struct:point 34 0) #(struct:point 34 4) #(s"
 #"truct:point 0 4)) 255 \"black\"))))) #(struct:translate 0 21 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point"
 #" 36 0) #(struct:point 36 5) #(struct:point 0 5)) 255 \"black\"))))) "
 #"#(struct:translate 1 26 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 34 0) #(struct:point 34 4) #(struct:"
 #"point 0 4)) 255 \"black\"))))) #(struct:translate 2 30 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 32 0)"
 #" #(struct:point 32 2) #(struct:point 0 2)) 255 \"black\"))))) #(stru"
 #"ct:translate 3 32 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 30 0) #(struct:point 30 1) #(struct:point "
 #"0 1)) 255 \"black\"))))) #(struct:translate 4 33 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 28 0) #(str"
 #"uct:point 28 1) #(struct:point 0 1)) 255 \"black\"))))))))))))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 36 0) #(struct:point 36 34) #(struct:point 0 34)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 10 5 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 14 0) #(struct:point 14 14) #(struct:po"
 #"int 0 14)) #(struct:translate 0 -0.5 #(struct:overlay #(struct:trans"
 #"late 4.0 0 #(struct:translate 3.0 6.5 #(struct:text \"L\" 0 1 #(stru"
 #"ct:color 50 133 29 255) 11 \"Gill Sans\" swiss normal bold #f))) #(s"
 #"truct:translate 0 0.5 #(struct:translate 7 7 #(struct:ellipse 14 14 "
 #"0 255 \"white\"))))))) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 1 1 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:"
 #"translate 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:overl"
 #"ay #(struct:translate 2 0 #(struct:overlay #(struct:translate 2 0 #("
 #"struct:overlay #(struct:translate 2 0 #(struct:overlay #(struct:tran"
 #"slate 2 0 #(struct:overlay #(struct:translate 3 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 6 0) #(str"
 #"uct:point 6 1) #(struct:point 0 1)) 255 #(struct:color 50 133 29 255"
 #")))) #(struct:translate 0 1 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:point 0 0) #(struct:point 12 0) #(struct:point 12 1) #(str"
 #"uct:point 0 1)) 255 #(struct:color 50 133 29 255)))))) #(struct:tran"
 #"slate 0 2 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 "
 #"0) #(struct:point 16 0) #(struct:point 16 2) #(struct:point 0 2)) 25"
 #"5 #(struct:color 50 133 29 255)))))) #(struct:translate 0 4 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point "
 #"20 0) #(struct:point 20 2) #(struct:point 0 2)) 255 #(struct:color 5"
 #"0 133 29 255)))))) #(struct:translate 0 6 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 24 0) #(struct:poi"
 #"nt 24 3) #(struct:point 0 3)) 255 #(struct:color 50 133 29 255))))))"
 #" #(struct:translate 0 9 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 28 0) #(struct:point 28 3) #(struct:"
 #"point 0 3)) 255 #(struct:color 50 133 29 255)))))) #(struct:translat"
 #"e 0 12 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 30 0) #(struct:point 30 4) #(struct:point 0 4)) 255 #"
 #"(struct:color 50 133 29 255)))))) #(struct:translate 0 16 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 32"
 #" 0) #(struct:point 32 4) #(struct:point 0 4)) 255 #(struct:color 50 "
 #"133 29 255)))))) #(struct:translate 0 20 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 34 0) #(struct:poin"
 #"t 34 5) #(struct:point 0 5)) 255 #(struct:color 50 133 29 255)))))) "
 #"#(struct:translate 1 25 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 32 0) #(struct:point 32 4) #(struct:"
 #"point 0 4)) 255 #(struct:color 50 133 29 255)))))) #(struct:translat"
 #"e 2 29 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 30 0) #(struct:point 30 2) #(struct:point 0 2)) 255 #"
 #"(struct:color 50 133 29 255)))))) #(struct:translate 3 31 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 28"
 #" 0) #(struct:point 28 1) #(struct:point 0 1)) 255 #(struct:color 50 "
 #"133 29 255)))))) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:transl"
 #"ate 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:overlay #(s"
 #"truct:translate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct"
 #":overlay #(struct:translate 2 0 #(struct:overlay #(struct:translate "
 #"2 0 #(struct:overlay #(struct:translate 3 0 #(struct:overlay #(struc"
 #"t:translate 1 0 #(struct:translate 0 0 #(struct:polygon (#(struct:po"
 #"int 0 0) #(struct:point 6 0) #(struct:point 6 1) #(struct:point 0 1)"
 #") 255 \"black\"))) #(struct:translate 0 1 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 8 0) #(struct:poin"
 #"t 8 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:translate 0 "
 #"2 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 14 0) #(struct:point 14 1) #(struct:point 0 1)) 255 \"blac"
 #"k\"))))) #(struct:translate 0 3 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:point 0 0) #(struct:point 18 0) #(struct:point 18 2) #"
 #"(struct:point 0 2)) 255 \"black\"))))) #(struct:translate 0 5 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poin"
 #"t 22 0) #(struct:point 22 2) #(struct:point 0 2)) 255 \"black\")))))"
 #" #(struct:translate 0 7 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 26 0) #(struct:point 26 3) #(struct:"
 #"point 0 3)) 255 \"black\"))))) #(struct:translate 0 10 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30 0)"
 #" #(struct:point 30 3) #(struct:point 0 3)) 255 \"black\"))))) #(stru"
 #"ct:translate 0 13 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 32 0) #(struct:point 32 4) #(struct:point "
 #"0 4)) 255 \"black\"))))) #(struct:translate 0 17 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 34 0) #(str"
 #"uct:point 34 4) #(struct:point 0 4)) 255 \"black\"))))) #(struct:tra"
 #"nslate 0 21 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 36 0) #(struct:point 36 5) #(struct:point 0 5)) "
 #"255 \"black\"))))) #(struct:translate 1 26 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:point 0 0) #(struct:point 34 0) #(struct:po"
 #"int 34 4) #(struct:point 0 4)) 255 \"black\"))))) #(struct:translate"
 #" 2 30 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 32 0) #(struct:point 32 2) #(struct:point 0 2)) 255 \""
 #"black\"))))) #(struct:translate 3 32 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30"
 #" 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:translate 4 33 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struc"
 #"t:point 28 0) #(struct:point 28 1"
 #") #(struct:point 0 1)) 255 \"black\"))))))))))))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 36 0) #(struc"
 #"t:point 36 34) #(struct:point 0 34)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 5 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 14 0) #(struct:point 14 14) #(struct:point 0 14)) #(s"
 #"truct:translate 0 -0.5 #(struct:overlay #(struct:translate 4.0 0 #(s"
 #"truct:translate 3.0 6.5 #(struct:text \"L\" 0 1 #(struct:color 50 13"
 #"3 29 255) 11 \"Gill Sans\" swiss normal bold #f))) #(struct:translat"
 #"e 0 0.5 #(struct:translate 7 7 #("
 #"struct:ellipse 14 14 0 255 \"white\"))))))) #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 1 1 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 1 0 #(str"
 #"uct:overlay #(struct:translate 1 0 #(struct:overlay #(struct:transla"
 #"te 1 0 #(struct:overlay #(struct:translate 2 0 #(struct:overlay #(st"
 #"ruct:translate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:"
 #"overlay #(struct:translate 2 0 #(struct:overlay #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 6 0) #(struct:point 6 1) #(struct:point 0 1)) 255 #(struc"
 #"t:color 50 133 29 255)))) #(struct:translate 0 1 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 12 0) #(str"
 #"uct:point 12 1) #(struct:point 0 1)) 255 #(struct:color 50 133 29 25"
 #"5)))))) #(struct:translate 0 2 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:point 0 0) #(struct:point 16 0) #(struct:point 16 2) #("
 #"struct:point 0 2)) 255 #(struct:color 50 133 29 255)))))) #(struct:t"
 #"ranslate 0 4 #(struct:translate 0 0 #(struct:polygon (#(struct:point"
 #" 0 0) #(struct:point 20 0) #(struct:point 20 2) #(struct:point 0 2))"
 #" 255 #(struct:color 50 133 29 255)))))) #(struct:translate 0 6 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 24 0) #(struct:point 24 3) #(struct:point 0 3)) 255 #(struct:colo"
 #"r 50 133 29 255)))))) #(struct:translate 0 9 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 28 0) #(struct:"
 #"point 28 3) #(struct:point 0 3)) 255 #(struct:color 50 133 29 255)))"
 #"))) #(struct:translate 0 12 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 4) #(str"
 #"uct:point 0 4)) 255 #(struct:color 50 133 29 255)))))) #(struct:tran"
 #"slate 0 16 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0"
 #" 0) #(struct:point 32 0) #(struct:point 32 4) #(struct:point 0 4)) 2"
 #"55 #(struct:color 50 133 29 255)))))) #(struct:translate 0 20 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poin"
 #"t 34 0) #(struct:point 34 5) #(struct:point 0 5)) 255 #(struct:color"
 #" 50 133 29 255)))))) #(struct:translate 1 25 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 32 0) #(struct:"
 #"point 32 4) #(struct:point 0 4)) 255 #(struct:color 50 133 29 255)))"
 #"))) #(struct:translate 2 29 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 2) #(str"
 #"uct:point 0 2)) 255 #(struct:color 50 133 29 255)))))) #(struct:tran"
 #"slate 3 31 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0"
 #" 0) #(struct:point 28 0) #(struct:point 28 1) #(struct:point 0 1)) 2"
 #"55 #(struct:color 50 133 29 255)))))) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 1 0 #(struct:ov"
 #"erlay #(struct:translate 1 0 #(struct:overlay #(struct:translate 1 0"
 #" #(struct:overlay #(struct:translate 2 0 #(struct:overlay #(struct:t"
 #"ranslate 2 0 #(struct:overlay #(struct:translate 2 0 #(struct:overla"
 #"y #(struct:translate 2 0 #(struct:overlay #(struct:translate 3 0 #(s"
 #"truct:overlay #(struct:translate 1 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 6 0) #(struct:point 6 1"
 #") #(struct:point 0 1)) 255 \"black\"))) #(struct:translate 0 1 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 8 0) #(struct:point 8 1) #(struct:point 0 1)) 255 \"black\"))))) "
 #"#(struct:translate 0 2 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:point 0 0) #(struct:point 14 0) #(struct:point 14 1) #(struct:p"
 #"oint 0 1)) 255 \"black\"))))) #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 18 0) #"
 #"(struct:point 18 2) #(struct:point 0 2)) 255 \"black\"))))) #(struct"
 #":translate 0 5 #(struct:translate 0 0 #(struct:polygon (#(struct:poi"
 #"nt 0 0) #(struct:point 22 0) #(struct:point 22 2) #(struct:point 0 2"
 #")) 255 \"black\"))))) #(struct:translate 0 7 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 26 0) #(struct:"
 #"point 26 3) #(struct:point 0 3)) 255 \"black\"))))) #(struct:transla"
 #"te 0 10 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0)"
 #" #(struct:point 30 0) #(struct:point 30 3) #(struct:point 0 3)) 255 "
 #"\"black\"))))) #(struct:translate 0 13 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:point 0 0) #(struct:point 32 0) #(struct:point "
 #"32 4) #(struct:point 0 4)) 255 \"black\"))))) #(struct:translate 0 1"
 #"7 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 34 0) #(struct:point 34 4) #(struct:point 0 4)) 255 \"blac"
 #"k\"))))) #(struct:translate 0 21 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 36 0) #(struct:point 36 5) "
 #"#(struct:point 0 5)) 255 \"black\"))))) #(struct:translate 1 26 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:po"
 #"int 34 0) #(struct:point 34 4) #(struct:point 0 4)) 255 \"black\")))"
 #")) #(struct:translate 2 30 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:point 0 0) #(struct:point 32 0) #(struct:point 32 2) #(stru"
 #"ct:point 0 2)) 255 \"black\"))))) #(struct:translate 3 32 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 30"
 #" 0) #(struct:point 30 1) #(struct:point 0 1)) 255 \"black\"))))) #(s"
 #"truct:translate 4 33 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 28 0) #(struct:point 28 1) #(struct:poi"
 #"nt 0 1)) 255 \"black\")))))))))))))) #(struct:bb 36 34 34.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT2"
0 0 24 3 1 #" "
0 12           4 4 3493
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 36.0 0) #(struct:"
 #"point 36.0 49.990018774299635) #(struct:point 0 49.990018774299635))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 14.76393"
 #"202250021 14.922316462824746 #(struct:translate 1.2360679774997894 6"
 #".155367074350507 #(struct:polygon (#(struct:point 0 0) #(struct:poin"
 #"t 5.23606797749979 -3.804226065180614) #(struct:point -1.23606797749"
 #"97894 -3.804226065180615) #(struct:point 4 0) #(struct:point 2.00000"
 #"00000000004 -6.155367074350507)) 255 \"yellow\"))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 36.0 0) #(st"
 #"ruct:point 36.0 49.990018774299635) #(struct:point 0 49.990018774299"
 #"635)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 18."
 #"76393202250021 26.922316462824746 #(struct:translate 1.2360679774997"
 #"894 6.155367074350507 #(struct:polygon (#(struct:point 0 0) #(struct"
 #":point 5.23606797749979 -3.804226065180614) #(struct:point -1.236067"
 #"9774997894 -3.804226065180615) #(struct:point 4 0) #(struct:point 2."
 #"0000000000000004 -6.155367074350507)) 255 \"yellow\"))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 36.0 0)"
 #" #(struct:point 36.0 49.990018774299635) #(struct:point 0 49.9900187"
 #"74299635)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 10.76393202250021 34.922316462824746 #(struct:translate 1.23606797"
 #"74997894 6.155367074350507 #(struct:polygon (#(struct:point 0 0) #(s"
 #"truct:point 5.23606797749979 -3.804226065180614) #(struct:point -1.2"
 #"360679774997894 -3.804226065180615) #(struct:point 4 0) #(struct:poi"
 #"nt 2.0000000000000004 -6.155367074350507)) 255 \"yellow\"))) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 4.55090158275411"
 #"1 0 #(struct:overlay #(struct:translate 1.169486818890947 3.82521902"
 #"3852142 #(struct:translate 12.27961159835494 -0.0 #(struct:polygon ("
 #"#(struct:point 0 0) #(struct:point 12.279611598354943 40.16479975044"
 #"7486) #(struct:point -12.27961159835494 40.16479975044749)) 255 #(st"
 #"ruct:color 12 12 155 255)))) #(struct:translate 0 0 #(struct:transla"
 #"te 13.449098417245887 -0.0 #(struct:polygon (#(struct:point 0 0) #(s"
 #"truct:point 13.449098417245892 43.99001877429963) #(struct:point -13"
 #".449098417245887 43.990018774299635)) 255 \"black\"))))) #(struct:tr"
 #"anslate 0 43.990018774299635 #(struct:overlay #(struct:translate 1 1"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 1 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point"
 #" 0 0) #(struct:point 32 0) #(struct:point 32 1) #(struct:point 0 1))"
 #" 255 \"pink\"))) #(struct:translate 0 1 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 34 0) #(struct:point"
 #" 34 2) #(struct:point 0 2)) 255 \"pink\"))))) #(struct:translate 1 3"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 32 0) #(struct:point 32 "
 #"1) #(struct:point 0 1)) 255 \"pink\"))))) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 1 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 34 0) #(struct:point 34 1) #(struct:point 0 1)) 255"
 #" \"black\"))) #(struct:translate 0 1 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 36 0) #(struct:point 36"
 #" 4) #(struct:point 0 4)) 255 \"black\"))))) #(struct:translate 1 5 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct"
 #":point 34 0) #(struct:point 34 1) #(struct:point 0 1)) 255 \"black\""
 #")))))))))))))))))))) #(struct:bb 36.0 49.990018774299635 49.99001877"
 #"4299635) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT3"
0 0 24 3 1 #" "
0 12           4 4 6687
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 55 0) #(struct:po"
 #"int 55 28) #(struct:point 0 28)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 35/2 25/2 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:point 0 0) #(struct:point 20 0) #(struct"
 #":point 20 1) #(struct:point 0 1)) 255 \"red\"))) #(struct:translate "
 #"0 1 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(s"
 #"truct:point 20 0) #(struct:point 20 1) #(struct:point 0 1)) 255 \"gr"
 #"een\"))))) #(struct:translate 0 2 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:point 0 0) #(struct:point 20 0) #(struct:point 20 1)"
 #" #(struct:point 0 1)) 255 \"teal\"))))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 55 0) #(struct:point 55"
 #" 28) #(struct:point 0 28)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 5.0 20.834936490538905 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate -0.0 4.330127018922194 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 5 0) #(struct:point "
 #"2.500000000000001 -4.330127018922194)) outline \"red\"))) #(struct:t"
 #"ranslate 5.0 0.0 #(struct:translate 5.0 4.330127018922194 #(struct:p"
 #"olygon (#(struct:point 0.0 -4.330127018922194) #(struct:point -5.0 -"
 #"4.330127018922194) #(struct:point -2.500000000000001 -0.0)) outline "
 #"\"teal\"))))) #(struct:translate 10.0 0.0 #(struct:translate -0.0 4."
 #"330127018922194 #(struct:polygon (#(struct:point 0 0) #(struct:point"
 #" 5 0) #(struct:point 2.500000000000001 -4.330127018922194)) outline "
 #"\"red\"))))) #(struct:translate 15.0 0.0 #(struct:translate 5.0 4.33"
 #"0127018922194 #(struct:polygon (#(struct:point 0.0 -4.33012701892219"
 #"4) #(struct:point -5.0 -4.330127018922194) #(struct:point -2.5000000"
 #"00000001 -0.0)) outline \"teal\"))))) #(struct:translate 20.0 0.0 #("
 #"struct:translate -0.0 4.330127018922194 #(struct:polygon (#(struct:p"
 #"oint 0 0) #(struct:point 5 0) #(struct:point 2.500000000000001 -4.33"
 #"0127018922194)) outline \"red\"))))) #(struct:translate 25.0 0.0 #(s"
 #"truct:translate 5.0 4.330127018922194 #(struct:polygon (#(struct:poi"
 #"nt 0.0 -4.330127018922194) #(struct:point -5.0 -4.330127018922194) #"
 #"(struct:point -2.500000000000001 -0.0)) outline \"teal\"))))) #(stru"
 #"ct:translate 30.0 0.0 #(struct:translate -0.0 4.330127018922194 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 5 0) #(struct:point"
 #" 2.500000000000001 -4.330127018922194)) outline \"red\"))))) #(struc"
 #"t:translate 35.0 0.0 #(struct:translate 5.0 4.330127018922194 #(stru"
 #"ct:polygon (#(struct:point 0.0 -4.330127018922194) #(struct:point -5"
 #".0 -4.330127018922194) #(struct:point -2.500000000000001 -0.0)) outl"
 #"ine \"teal\"))))) #(struct:translate 40.0 0.0 #(struct:translate -0."
 #"0 4.330127018922194 #(struct:polygon (#(struct:point 0 0) #(struct:p"
 #"oint 5 0) #(struct:point 2.500000000000001 -4.330127018922194)) outl"
 #"ine \"red\"))))) #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:line-segment #(struct:point 4 23) #(struct:poin"
 #"t 51 23) \"green\") #(struct:overlay #(struct:translate 33/2 0 #(str"
 #"uct:overlay #(struct:translate 8 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:point 0 0) #(struct:point 6 0) #(struct:point 6 1) "
 #"#(struct:point 0 1)) 255 \"black\"))) #(struct:translate 0 1 #(struc"
 #"t:overlay #(struct:translate 1 0 #(struct:overlay #(struct:translate"
 #" 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:overlay #(stru"
 #"ct:translate 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:ov"
 #"erlay #(struct:translate 1 0 #(struct:overlay #(struct:translate 2 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 6 0) #(struct:point 6 1) #(struct:point 0 1)) 255 \"tan\"))"
 #") #(struct:translate 0 1 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:point 0 0) #(struct:point 10 0) #(struct:point 10 1) #(struct"
 #":point 0 1)) 255 \"tan\"))))) #(struct:translate 0 2 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 12 0) #"
 #"(struct:point 12 1) #(struct:point 0 1)) 255 \"tan\"))))) #(struct:t"
 #"ranslate 0 3 #(struct:translate 0 0 #(struct:polygon (#(struct:point"
 #" 0 0) #(struct:point 14 0) #(struct:point 14 1) #(struct:point 0 1))"
 #" 255 \"tan\"))))) #(struct:translate 0 4 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 16 0) #(struct:poin"
 #"t 16 1) #(struct:point 0 1)) 255 \"tan\"))))) #(struct:translate 0 5"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 18 0) #(struct:point 18 2) #(struct:point 0 2)) 255 \"tan\""
 #"))))) #(struct:translate 0 7 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:point 0 0) #(struct:point 20 0) #(struct:point 20 10) #(s"
 #"truct:point 0 10)) 255 \"tan\"))))) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 1 0 #(struct:overlay #(struct:translate 1"
 #" 0 #(struct:overlay #(struct:translate 1 0 #(struct:overlay #(struct"
 #":translate 1 0 #(struct:overlay #(struct:translate 1 0 #(struct:over"
 #"lay #(struct:translate 2 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:point 0 0) #(struct:point 8 0) #(struct:point 8 1) #(struct"
 #":point 0 1)) 255 \"black\"))) #(struct:translate 0 1 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 12 0) #"
 #"(struct:point 12 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct"
 #":translate 0 2 #(struct:translate 0 0 #(struct:polygon (#(struct:poi"
 #"nt 0 0) #(struct:point 14 0) #(struct:point 14 1) #(struct:point 0 1"
 #")) 255 \"black\"))))) #(struct:translate 0 3 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 16 0) #(struct:"
 #"point 16 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:transla"
 #"te 0 4 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 18 0) #(struct:poin"
 #"t 18 1) #(struct:point 0 1)) 255 \"black\"))))) #(struct:translate 0"
 #" 5 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 20 0) #(struct:point 20 2) #(struct:point 0 2)) 255 \"bla"
 #"ck\"))))) #(struct:translate 0 7 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 22 0) #(struct:point 22 10)"
 #" #(struct:point 0 10)) 255 \"black\"))))))))) #(struct:translate 0 1"
 #"8 #(struct:overlay #(struct:translate 1/2 1 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:point 0 0) #(struct:point 4 8) #(struct:po"
 #"int 49 8) #(struct:point 54 0)) 255 \"tan\"))) #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 5 10) #(struct:point 50 10) #(struct:point 55 0)) 255 \"bl"
 #"ack\")))))))))))))))) #(struct:bb 55 28 28.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT4"
0 0 24 3 1 #" "
0 12           4 4 3123
(
 #"(#(struct:overlay #(struct:translate 14 0 #(struct:overlay #(struct:"
 #"translate 1 0 #(struct:translate 0 0 #(struct:polygon (#(struct:poin"
 #"t 0 0) #(struct:point 6 0) #(struct:point 6 1) #(struct:point 0 1)) "
 #"255 \"black\"))) #(struct:translate 0 1 #(struct:overlay #(struct:tr"
 #"anslate 1 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 6 0) #(struct:point 6 1) #(struct:point 0 1)) 25"
 #"5 \"red\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 8 0) #(struct:point 8 1)"
 #" #(struct:point 0 1)) 255 \"black\"))))))) #(struct:translate 0 2 #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 36 0) #(struct:point"
 #" 36 32) #(struct:point 0 32)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 21 6 #(struct:overlay #(struct:translate 1 1 #("
 #"struct:translate 5 5 #(struct:ellipse 10 10 0 255 \"white\"))) #(str"
 #"uct:translate 0 0 #(struct:translate 6 6 #(struct:ellipse 12 12 0 25"
 #"5 \"black\"))))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 36 0) #(struct:point 36 32) #(struct:point 0 3"
 #"2)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 13 1 "
 #"#(struct:overlay #(struct:translate 1 0 #(struct:translate -1 0 #(st"
 #"ruct:polygon (#(struct:point 9 0) #(struct:point 1 0) #(struct:point"
 #" 11 10) #(struct:point 17 10)) 255 \"red\"))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 10 0) #(str"
 #"uct:point 0 0) #(struct:point 10 10) #(struct:point 18 10)) 255 \"bl"
 #"ack\"))))) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 3 0 #(struct:overlay #(struct:translate 1 0 #(struct:translate -1 "
 #"0 #(struct:polygon (#(struct:point 19 0) #(struct:point 11 0) #(stru"
 #"ct:point 1 25) #(struct:point 29 25)) 255 \"red\"))) #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 20 0"
 #") #(struct:point 10 0) #(struct:point 0 25) #(struct:point 30 25)) 2"
 #"55 \"black\"))))) #(struct:translate 0 25 #(struct:overlay #(struct:"
 #"translate 1 1 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 1 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:point 0 0) #(struct:point 32 0) #(struct:point 32 1) #(struc"
 #"t:point 0 1)) 255 \"white\"))) #(struct:translate 0 1 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 34 0) "
 #"#(struct:point 34 3) #(struct:point 0 3)) 255 \"white\"))))) #(struc"
 #"t:translate 1 4 #(struct:translate 0 0 #(struct:polygon (#(struct:po"
 #"int 0 0) #(struct:point 32 0) #(struct:point 32 1) #(struct:point 0 "
 #"1)) 255 \"white\"))))) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 1 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 34"
 #" 0) #(struct:point 34 1) #(struct:point 0 1)) 255 \"black\"))) #(str"
 #"uct:translate 0 1 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 36 0) #(struct:point 36 5) #(struct:point "
 #"0 5)) 255 \"black\"))))) #(struct:translate 1 6 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 34 0) #(stru"
 #"ct:point 34 1) #(struct:point 0 1)) 255 \"black\")))))))))))))))))) "
 #"#(struct:bb 36 34 34) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"ES"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"sea green\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 17 3 13 #"; empty scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"GAME-RECTANGLE"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"aquamarine\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"STANDBY-AREA"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"aquamarine\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCORE-AREA"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"aquamarine\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"HEAD"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 14 #"GAME-RECTANGLE"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 24 3 1 #"("
0 0 14 3 10 #"build-list"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"BG"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 12 #"STANDBY-AREA"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCORE-AREA"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 2 #"ES"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Data Definitions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; A Gs [Gamestate] is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; - Ss [Startstate]"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; - Ps [Pausestate]"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; - Rs [Runstate]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Ss [Startstate] is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - 'easy"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; - 'medium"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - 'hard"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; Ps [Pausestate] is a struct:"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; (make-ps [List-of Hat] [List-of [List-of Hat]] [List-of Hat] Numb"
 #"er Symbol])"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; a Ps contains the information of a Rs, and it does not ever chang"
 #"e "
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; for the duration of the Ps"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Rs [Runstate] is a struct:"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; (make-rs [List-of Hat] [List-of [List-of Hat]] [List-of Hat] Numb"
 #"er Symbol])"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; interp: an rs represents:"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; - the current hats the player is controlling"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; - the current two hats the player is controlling"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; - the hats that are resting at the bottom of the game area, organ"
 #"ized by column"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";; - two numbers that represent the hats on standby"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; - the player's score"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; A Hat is a struct:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; (make-hat (Number Number Number))"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; interp: a hat represents"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; - the type of hat represented by a number between 0 and 4 inclusi"
 #"ve"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; - which column in the scene it is (number between 0 and 20 inclus"
 #"ive)"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";; - the y coordinate of the hat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Big-Bang"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Ss -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; starts the game from the startscreen, and returns the player scor"
 #"e when finished"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 6 #"update"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 4 #"keyh"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"["
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 13 #"too-many-hats"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 14 3 1 #"n"
0 0 14 3 2 #"d-"
0 0 14 3 1 #"g"
0 0 14 3 9 #"ame-scene"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Handler Functions for Big Bang"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Gs -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; selects the appropriate render function for the current Gs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-start"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"ps?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-pause"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"render-rs"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Gs -> Gs"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; selects the appropriate update function for the current Gs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"update-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"ps?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"update-rs"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Gs KeyEvent -> Gs"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; selects the approriate KeyEvent handler for the current Gs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"keyh"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"keyh"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"unpause"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"keyh"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"change-difficulty"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"ps?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"unpause"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Gs -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; checks if the hats are stacked too high, only for a Rs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"too-many-hats"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"too-many-hats"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-ps"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"too-many-hats"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"too-many-hats"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"ps?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"hats-too-high?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Starting up the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Ss -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; renders the start menu"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-start"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 17 3 21 #"; STEP 3 NEVER FORGET"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-start"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 17 3 22 #";; bunch-o local stuff"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 11 #"place-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-a"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Welcome to Hatris\""
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-b"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Select Difficulty\""
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-c"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Down to Start\""
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-d"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 52 #"\"Controls: left/right to move, space to switch hats\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-e"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"down to drop, p to pause\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"title-scene"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-a"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-b"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-c"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-d"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 12 #"title-text-e"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 2 #"ES"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 65
#";; color-diff highlights the currently selected difficulty in red"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"color-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"darkred\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 54 #";; incorporates color-diff into the overlaying of text"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Wimp\""
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"color-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Wumbo\""
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"color-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Wdeath\""
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"color-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 8 #"SEG-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 11 #"title-scene"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Ss KeyEvent -> Ss or Rs"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; changes difficulty if the player pushes the left of right arrow k"
 #"ey"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";; creates a Runstate once the shift key is pushed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"change-difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"change-difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"change-difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"change-difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"change-difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"change-difficulty"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 21 #"move-difficulty-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 20 #"move-difficulty-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"make-start-rs"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Ss -> Rs"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; makes the start game Rs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"make-start-rs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"make-start-rs"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"standby-to-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Ss -> Ss"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; moves the difficulty in response to the right key"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 21 #"move-difficulty-right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 21 #"move-difficulty-right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 21 #"move-difficulty-right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 21 #"move-difficulty-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Ss -> Ss"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; moves the difficulty in response to the left key"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 20 #"move-difficulty-left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 20 #"move-difficulty-left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 20 #"move-difficulty-left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 20 #"move-difficulty-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Pausing the Game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-ps"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Ps -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; renders the ps"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-pause"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-pause"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 7 #"overlay"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"PAUSED\""
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 9 #"render-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"ps-active"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 24 3 1 #"("
0 0 14 3 9 #"ps-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 24 3 1 #"("
0 0 14 3 10 #"ps-standby"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 24 3 1 #"("
0 0 14 3 8 #"ps-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 24 3 1 #"("
0 0 14 3 7 #"ps-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Ps KeyEvent -> Rs or Ps"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; unpauses the game if the p key is pressed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"unpause"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"unpause"
0 0 24 3 1 #" "
0 0 14 3 3 #"ps1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"unpause"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"ps-active"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"ps-placed"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"ps-standby"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"ps-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"ps-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; The Actual Game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; REPOSTED FOR POSTERITY"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; (define-struct rs (active placed standby score diff))"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Rs [Runstate] is a struct:"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; (make-rs [List-of Hat] [List-of [List-of Hat]] [List-of Number] N"
 #"umber Symbol])"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; interp: an rs represents:"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; - the current two hats the player is controlling"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; - the hats that are resting at the bottom of the game area, organ"
 #"ized by 6 columns"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";; - two numbers that represent the hats on standby"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; - the player's score"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";l (define-struct hat (type column y))"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; A Hat is a struct:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; (make-hat (Number Number Number))"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; interp: a hat represents"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; - the type of hat represented by a number between 0 and 4 inclusi"
 #"ve"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#";; - which column in the scene it is (odd number between 0 and 12)"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; - the y coordinate of the hat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 11 #"place-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; DATA EXAMPLES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"column-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"373"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"403"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"empty-placed"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"413"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 9 #"column-ex"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"five-stacked-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"empty-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";;=================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Rendering"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; render-rs"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Rs -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; renders the current Rs as an image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"render-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"render-rs"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"render-game-area"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-active"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"render-standby"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"rs-standby"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-score"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"rs-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 2 #"ES"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; render-game-area"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; [List-of Hat] [List-of [List-of Hat]] -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";; renders the active hats being currently controlled and the hats r"
 #"esting at the botoom on GAME-AREA"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"render-game-area"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"render-game-area"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-active"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-placed"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"render-game-area"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-active"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-placed"
0 0 24 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; render-active"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; [List-of Hat] Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; renders the two active hats on an image i"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-active"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT2"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-active"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"a-hat"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-hat"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"hat-column"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-hat"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"hat-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-hat"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; render-placed"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; [List-of [List-of Hat]] Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; renders the hats resting at the bottom on an image i"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-placed"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"413"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT2"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"373"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"403"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT2"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-placed"
0 0 24 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"column"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-column"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; render-column"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; [List-of Hat] Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; places the hats at the approriate location on an image i"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-column"
0 0 24 3 1 #" "
0 0 14 3 9 #"column-ex"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT2"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"373"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"403"
0 0 24 3 1 #" "
0 0 14 3 9 #"GAME-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"render-column"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"current"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"hat-column"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"hat-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; render-standby"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; [List-of Number] -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; renders the hats on standy on STANDBY-AREA"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; CONSTRAINT: there will ALWAYS be two numbers representing hats in"
 #" the list"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"render-standby"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 12 #"STANDBY-AREA"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"render-standby"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT2"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 12 #"STANDBY-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"render-standby"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 12 #"STANDBY-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 12 #"STANDBY-AREA"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 3 1 #"("
0 0 14 3 3 #"p-i"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 3 #"mid"
0 0 24 3 1 #" "
0 0 14 3 12 #"STANDBY-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; render-score"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Number -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; renders the score on SCORE-AREA"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"overlay"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"100\""
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCORE-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"render-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 7 #"overlay"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 10 #"SCORE-AREA"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; draw-hat"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Number -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; draws the approratie hat for the input number 0 <= n <= 4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT3"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"HAT4"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";; UPDATE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; update-gs"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Rs -> Rs"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; consolidates all the helper functins into one function for updati"
 #"ng a Gs"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"update-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"update-rs"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"hats-fall-down"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-active"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"make-new-active?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"rs-standby"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 3 1 #"("
0 0 14 3 19 #"remove-five-stacked"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"auto-drop-active"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 3 1 #"("
0 0 14 3 17 #"make-new-standby?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"rs-standby"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 3 1 #"("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"auto-drop-active"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"rs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; make-standby"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Symbol -> [List-of Number]"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; makes a new set of hats on standby"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; make-new-standby? "
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; [List-of Number] [List-of Hat] [List-of [List-of Hat]] Symbol -> "
 #"[List-of Number]"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; makes a new standby if hats get auto placed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"make-new-standby?"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 12 #"can-replace?"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 7 #"standby"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; standby-to-active"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; [List-of Number] -> [List-of Hat]"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; convets the hats currently on standby to active hats at the top o"
 #"f the game area"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"standby-to-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"standby-to-active"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; five-stacked?"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; [List-of Hat] -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; are the first 5 hats on the list the same type?"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"five-stacked?"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"five-stacked?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"five-stacked?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"five-stacked?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 14 3 6 #"hat-ex"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"five-stacked?"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"fifth"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; remove-five-stacked"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; [List-of [List-of Hat]] -> [List-of [List-of Hat]]"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; removes all 5-stacked hats from the placed field"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"remove-five-stacked"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"remove-five-stacked"
0 0 24 3 1 #" "
0 0 14 3 15 #"five-stacked-ex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"remove-five-stacked"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"remove-five"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"five-stacked?"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"remove-five"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; auto-drop-active"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; [List-of Hat] [List-of [List-of Hat]] -> [List-of [List-of Hat]]"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; auto drops the active if they get too low"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"auto-drop-active"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #" "
0 0 14 3 12 #"empty-placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 12 #"empty-placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"auto-drop-active"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 9 #"drop-hats"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"auto-drop-active"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"can-replace?"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"("
0 0 14 3 9 #"drop-hats"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; make-new-active?"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; [List-of Number] [List-of Hat] [List-of [List-of Hat]] -> [List-o"
 #"f Hat]"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; makes a new active if the active gets auto placed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"make-new-active?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #" "
0 0 14 3 12 #"empty-placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"make-new-active?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"390"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"390"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 17 #"standby-to-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"make-new-active?"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"can-replace?"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"("
0 0 14 3 17 #"standby-to-active"
0 0 24 3 1 #" "
0 0 14 3 7 #"standby"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 6 #"active"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; can-replace?"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; [List-of Hat] [List-of [List-of Hat]] -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; checks whether or not both hats can be auto placed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"can-replace?"
0 0 24 3 1 #" "
0 0 14 3 9 #"active-ex"
0 0 24 3 1 #" "
0 0 14 3 12 #"empty-placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"can-replace?"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"hat"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"can-place?"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; can-place?"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Hat [List-of [List-of Hat]] -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; checks whether the hat can be auto-placed by the software"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"can-place?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 12 #"empty-placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"can-place?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 12 #"empty-placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"can-place?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"390"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"can-place?"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"draw-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"hat-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"image-center"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"image-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 12 #"image-center"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"hat-y"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; hats-fall-down"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; [List-of Hat] Symbol -> [List-of Hat]"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; moves the active hats down every clock tick. Hats move faster on "
 #"hard difficulty"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"hats-fall-down"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"hats-fall-down"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"hats-fall-down"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"hats-fall-down"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"medium"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"hat-column"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"hat-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 10 #"difficulty"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"hard"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"hat-column"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"hat-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 3 #"loh"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; update-score"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; [List-of [List-of Hat]] Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; adds 100 to the score every time hats get 5 stacked"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 14 3 9 #"placed-ex"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"column"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"five-stacked?"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #"; KEY-HANDLER"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; DATA EXMAPLES FOR TESTING PURPOSES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"placed0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"placed1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"404"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"active2"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"active3"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 14 3 7 #"active2"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; rs-keyh"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Rs KeyEvent -> Rs"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; main key-handler function that hands tasks off"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; to various helper functions depending on the input key"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 2 #"  "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 14 3 16 #"move-active-left"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 14 3 17 #"move-active-right"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 14 3 13 #"switch-active"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"ps?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-keyh"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #" "
0 0 14 3 16 #"move-active-left"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #" "
0 0 14 3 17 #"move-active-right"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #" "
0 0 14 3 13 #"switch-active"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"new-rs-after-drop"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"pause-game"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; pause-game"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Rs -> Ps"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; pauses the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"ps?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"pause-game"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"pause-game"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-ps"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-active"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 10 #"rs-standby"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 8 #"rs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; apply-to-rs"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Rs Function -> Rs"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; applies some function f to the active field of the rs"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; retains the rest of the rs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 14 3 16 #"move-active-left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 11 #"rs-start-ex"
0 0 24 3 1 #" "
0 0 14 3 17 #"move-active-right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"apply-to-rs"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-active"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 10 #"rs-standby"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 8 #"rs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; new-rs-after-drop"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Rs -> Rs"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; constructs a new rs after dropping the hats"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"rs?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"new-rs-after-drop"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 14 3 7 #"active3"
0 0 24 3 1 #" "
0 0 14 3 7 #"placed1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"easy"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"new-rs-after-drop"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 7 #"make-rs"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"standby-to-active"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"rs-standby"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 9 #"drop-hats"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-active"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-placed"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 12 #"make-standby"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 8 #"rs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 3 1 #"("
0 0 14 3 7 #"rs-diff"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; drop-hats"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; [List-of Hat] [List-of [List-of Hat]] -> [List-of [List-of Hat]]"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; drops the active hats the the bottom "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"drop-hats"
0 0 24 3 1 #" "
0 0 14 3 7 #"active3"
0 0 24 3 1 #" "
0 0 14 3 7 #"placed1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"375"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"404"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"drop-hats"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"place-hat-in-column"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"drop-hats"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"place-hat-in-column"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"active"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; place-hat-in-column"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; Hat [List-of [List-of Hat]] -> [List-of [List-of Hat]]"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; chooses corrent column in the list to place the hat in"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"place-hat-in-column"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"fifth"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"sixth"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; place-hat-here?"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Hat [List-of Hat] Number -> [List-of Hat]"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; determins the right column to place the hat in    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"404"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"404"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"399"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"404"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 15 #"place-hat-here?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"hat-column"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 3 #"hat"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; place-hat"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Hat [List-of Hat] -> [List-of Hat]"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; selects the appropriate helper function to place the hat"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; depending on what type of hat is below it"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; CONSTRAINT: h must be in the same column as placed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 7 #"active2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-0"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-1"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-2"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-3"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-4"
0 0 24 3 1 #" "
0 0 14 3 7 #"active1"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"place-hat"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"type=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"hat-column"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 3 1 #" "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"hat-y"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 6 #"column"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-empty"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"type=?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"place-0"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"type=?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"place-1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"type=?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"place-2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"type=?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"place-3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 6 #"type=?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"place-4"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 6 #"placed"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; place-empty"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Hat -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; determines height to place the hat in an empty column depending o"
 #"n hat type"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-empty"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"404"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-empty"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-empty"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-empty"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-empty"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-empty"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"404"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"410"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; place-0"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Hat Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; determines height to place the hat on top of the y coord of a HAT"
 #"0"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"395"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"376"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"369"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"371"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-0"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"373"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-0"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"hat-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 2 #"29"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 3 1 #"["
0 0 24 3 1 #"("
0 0 14 3 5 #"type?"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 3 1 #"]"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 1 #")"
0 0 24 3 16 #"                "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; place-1"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Hat Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; determines height to place the hat on top of the y coord of a HAT"
 #"1"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"369"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"377"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"367"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"376"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-1"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-hat"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 3 1 #" "
0 0 21 3 3 #"373"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"place-1"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 1 #"("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"hat-type"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"31"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"23"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"33"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"24"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"27"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 10 #";; place-2"
0 0 4 29 1 #"\n"
0 0 4 3 23 #";; Hat Number -> Number"
0 0 4 29 1 #"\n"
0 0 4 3 69
(
 #";; determines height to place the hat on top of the y coord of a HAT"
 #"2"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-2"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"393"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-2"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"390"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-2"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"394"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-2"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"384"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-2"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"385"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-2"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 5 #"local"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"hat-type"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 1 #"7"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"10"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 1 #"6"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"16"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"15"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 10 #";; place-3"
0 0 4 29 1 #"\n"
0 0 4 3 23 #";; Hat Number -> Number"
0 0 4 29 1 #"\n"
0 0 4 3 69
(
 #";; determines height to place the hat on top of the y coord of a HAT"
 #"3"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-3"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"383"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-3"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"384"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-3"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"379"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-3"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"389"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-3"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"385"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-3"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 5 #"local"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"hat-type"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"17"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"16"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"21"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"11"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"15"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 10 #";; place-4"
0 0 4 29 1 #"\n"
0 0 4 3 23 #";; Hat Number -> Number"
0 0 4 29 1 #"\n"
0 0 4 3 69
(
 #";; determines height to place the hat on top of the y coord of a HAT"
 #"4"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-4"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"374"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-4"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"386"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-4"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"376"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-4"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"382"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-4"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"400"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 3 #"387"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 7 #"place-4"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 5 #"local"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"hat-type"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"t"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"26"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"14"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"24"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"18"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 5 #"type?"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"-"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 1 #" "
0 0 4 3 2 #"13"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 49 #";; move-hats, move-active-left, move-active-right"
0 0 4 29 1 #"\n"
0 0 4 3 59
#";; [List-of Hat] [Number Number -> Number] -> [List-of Hat]"
0 0 4 29 1 #"\n"
0 0 4 3 65
#";; moves the active hats to either the left or the right (- or +)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 16 #"move-active-left"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 17 #"move-active-right"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"7"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 16 #"move-active-left"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 17 #"move-active-right"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"9"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 2 #"11"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"9"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 2 #"11"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 19 #";; move-active-left"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 16 #"move-active-left"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 11 #"move-active"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #" "
0 0 4 3 1 #"-"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 20 #";; move-active-right"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 17 #"move-active-right"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 11 #"move-active"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #" "
0 0 4 3 1 #"+"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 11 #"move-active"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #" "
0 0 4 3 1 #"f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 5 #"local"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 7 #"hatcol1"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 10 #"hat-column"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"first"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 3 #"   "
0 0 4 3 20 #";; column of 1st hat"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 7 #"hatcol2"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 10 #"hat-column"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"second"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 20 #";; column of 2nd hat"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 3 #"and"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 4 3 1 #"f"
0 0 4 3 1 #" "
0 0 4 3 1 #"-"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 2 #"or"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"="
0 0 4 3 1 #" "
0 0 4 3 7 #"hatcol1"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"="
0 0 4 3 1 #" "
0 0 4 3 7 #"hatcol2"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 1 #"("
0 0 4 3 3 #"and"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 4 3 1 #"f"
0 0 4 3 1 #" "
0 0 4 3 1 #"+"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 2 #"or"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"="
0 0 4 3 1 #" "
0 0 4 3 7 #"hatcol1"
0 0 4 3 1 #" "
0 0 4 3 2 #"11"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"="
0 0 4 3 1 #" "
0 0 4 3 7 #"hatcol2"
0 0 4 3 1 #" "
0 0 4 3 2 #"11"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 1 #"["
0 0 4 3 4 #"else"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"foldr"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"h"
0 0 4 3 1 #" "
0 0 4 3 4 #"base"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 4 3 1 #"("
0 0 4 3 4 #"cons"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"hat-type"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 1 #"f"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 10 #"hat-column"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"hat-y"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 4 #"base"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 4 3 5 #"empty"
0 0 4 3 1 #" "
0 0 4 3 11 #"active-hats"
0 0 4 3 1 #")"
0 0 4 3 1 #"]"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 14 #";; switch-hats"
0 0 4 29 1 #"\n"
0 0 4 3 33 #";; [List-of Hat] -> [List-of Hat]"
0 0 4 29 1 #"\n"
0 0 4 3 56 #";; switches the order of the two active hats in the list"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 13 #"switch-active"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 3 #"200"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 13 #"switch-active"
0 0 4 3 1 #" "
0 0 4 3 6 #"active"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"hat-type"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"first"
0 0 4 3 1 #" "
0 0 4 3 6 #"active"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 10 #"hat-column"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"second"
0 0 4 3 1 #" "
0 0 4 3 6 #"active"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"hat-y"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"first"
0 0 4 3 1 #" "
0 0 4 3 6 #"active"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 3 1 #"("
0 0 4 3 8 #"make-hat"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 8 #"hat-type"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"second"
0 0 4 3 1 #" "
0 0 4 3 6 #"active"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 10 #"hat-column"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"first"
0 0 4 3 1 #" "
0 0 4 3 6 #"active"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 5 #"hat-y"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"second"
0 0 4 3 1 #" "
0 0 4 3 6 #"active"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 100
(
 #";; ================================================================="
 #"================================"
) 0 0 4 29 1 #"\n"
0 0 4 3 15 #";; Stop-Handler"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 17 #";; stop-the-game?"
0 0 4 29 1 #"\n"
0 0 4 3 16 #";; Rs -> Boolean"
0 0 4 29 1 #"\n"
0 0 4 3 31 #";; stop handler function for rs"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 14 #"stop-the-game?"
0 0 4 3 1 #" "
0 0 4 3 8 #"empty-rs"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 5 #"false"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 14 #"stop-the-game?"
0 0 4 3 1 #" "
0 0 4 3 2 #"rs"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 14 #"hats-too-high?"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 9 #"rs-placed"
0 0 4 3 1 #" "
0 0 4 3 2 #"rs"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 17 #";; hats-too-high?"
0 0 4 29 1 #"\n"
0 0 4 3 37 #";; [List-of [List-of Hat]] -> Boolean"
0 0 4 29 1 #"\n"
0 0 4 3 38 #";; is any one column stacked too high?"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 14 #"hats-too-high?"
0 0 4 3 1 #" "
0 0 4 3 9 #"placed-ex"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 5 #"false"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 14 #"hats-too-high?"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #" "
0 0 4 3 6 #"hat-ex"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 4 3 5 #"empty"
0 0 4 3 1 #" "
0 0 4 3 5 #"empty"
0 0 4 3 1 #" "
0 0 4 3 5 #"empty"
0 0 4 3 1 #" "
0 0 4 3 5 #"empty"
0 0 4 3 1 #" "
0 0 4 3 5 #"empty"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 4 #"true"
0 0 4 3 1 #")"
0 0 4 3 12 #"            "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 14 #"hats-too-high?"
0 0 4 3 1 #" "
0 0 4 3 6 #"placed"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 5 #"ormap"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"column"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 2 #">="
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"length"
0 0 4 3 1 #" "
0 0 4 3 6 #"column"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 2 #"10"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 6 #"placed"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 17 #";; end-game-scene"
0 0 4 29 1 #"\n"
0 0 4 3 14 #";; Rs -> Image"
0 0 4 29 1 #"\n"
0 0 4 3 30 #";; renders the game-over scene"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 6 #"image?"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 14 #"end-game-scene"
0 0 4 3 1 #" "
0 0 4 3 11 #"rs-start-ex"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #" "
0 0 4 3 4 #"true"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 14 #"end-game-scene"
0 0 4 3 1 #" "
0 0 4 3 2 #"rs"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 3 1 #"("
0 0 4 3 7 #"overlay"
0 0 4 3 1 #" "
0 0 4 3 1 #"("
0 0 4 3 4 #"text"
0 0 4 3 1 #" "
0 0 4 3 11 #"\"GAME OVER\""
0 0 4 3 1 #" "
0 0 4 3 3 #"100"
0 0 4 3 1 #" "
0 0 4 3 7 #"\"black\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 1 #"("
0 0 4 3 1 #"r"
0 0 4 3 1 #"e"
0 0 4 3 7 #"nder-rs"
0 0 4 3 1 #" "
0 0 4 3 2 #"rs"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
